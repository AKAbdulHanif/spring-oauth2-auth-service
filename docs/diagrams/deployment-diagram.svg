<svg width="1400" height="1000" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 24px; font-weight: bold; fill: #2c3e50; }
      .subtitle { font-family: Arial, sans-serif; font-size: 16px; fill: #7f8c8d; }
      .component { font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; fill: white; }
      .description { font-family: Arial, sans-serif; font-size: 11px; fill: white; }
      .label { font-family: Arial, sans-serif; font-size: 12px; fill: #2c3e50; }
      .env-title { font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; fill: #2c3e50; }
      .docker-container { fill: #3498db; stroke: #2980b9; stroke-width: 2; }
      .k8s-pod { fill: #27ae60; stroke: #229954; stroke-width: 2; }
      .database { fill: #f39c12; stroke: #e67e22; stroke-width: 2; }
      .cache { fill: #e74c3c; stroke: #c0392b; stroke-width: 2; }
      .load-balancer { fill: #9b59b6; stroke: #8e44ad; stroke-width: 2; }
      .volume { fill: #95a5a6; stroke: #7f8c8d; stroke-width: 2; }
      .network { fill: none; stroke: #34495e; stroke-width: 2; stroke-dasharray: 5,5; }
      .connection { stroke: #34495e; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .env-bg { fill: #ecf0f1; stroke: #bdc3c7; stroke-width: 2; opacity: 0.3; }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#34495e" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="700" y="30" text-anchor="middle" class="title">OAuth2 Authorization Service - Deployment Architecture</text>
  <text x="700" y="55" text-anchor="middle" class="subtitle">Docker Compose and Kubernetes deployment options</text>
  
  <!-- Development Environment -->
  <g id="development-env">
    <rect x="50" y="100" width="600" height="400" rx="10" class="env-bg"/>
    <text x="350" y="125" text-anchor="middle" class="env-title">Development Environment (Docker Compose)</text>
    
    <!-- Docker Host -->
    <rect x="80" y="150" width="540" height="320" rx="5" fill="#f8f9fa" stroke="#6c757d" stroke-width="1"/>
    <text x="350" y="175" text-anchor="middle" class="label" style="font-weight: bold;">Docker Host (Local Machine)</text>
    
    <!-- OAuth2 Auth Server Container -->
    <rect x="100" y="200" width="200" height="120" rx="5" class="docker-container"/>
    <text x="200" y="220" text-anchor="middle" class="component">oauth2-auth-server</text>
    <text x="200" y="235" text-anchor="middle" class="description">• Spring Boot App</text>
    <text x="200" y="245" text-anchor="middle" class="description">• Port: 9000</text>
    <text x="200" y="255" text-anchor="middle" class="description">• Health Checks</text>
    <text x="200" y="265" text-anchor="middle" class="description">• JVM: OpenJDK 11</text>
    <text x="200" y="275" text-anchor="middle" class="description">• Memory: 512MB</text>
    <text x="200" y="285" text-anchor="middle" class="description">• Profile: docker</text>
    <text x="200" y="295" text-anchor="middle" class="description">• Restart: unless-stopped</text>
    
    <!-- H2 Database (Embedded) -->
    <rect x="100" y="340" width="200" height="80" rx="5" class="database"/>
    <text x="200" y="365" text-anchor="middle" class="component">H2 Database</text>
    <text x="200" y="380" text-anchor="middle" class="description">• In-Memory</text>
    <text x="200" y="390" text-anchor="middle" class="description">• Console: /h2-console</text>
    <text x="200" y="400" text-anchor="middle" class="description">• Auto DDL</text>
    <text x="200" y="410" text-anchor="middle" class="description">• Development Only</text>
    
    <!-- PostgreSQL Container (Optional) -->
    <rect x="320" y="200" width="140" height="100" rx="5" class="database"/>
    <text x="390" y="220" text-anchor="middle" class="component">PostgreSQL</text>
    <text x="390" y="235" text-anchor="middle" class="description">• Port: 5432</text>
    <text x="390" y="245" text-anchor="middle" class="description">• Volume: postgres_data</text>
    <text x="390" y="255" text-anchor="middle" class="description">• User: auth_user</text>
    <text x="390" y="265" text-anchor="middle" class="description">• DB: oauth2_auth</text>
    <text x="390" y="275" text-anchor="middle" class="description">• Persistent Storage</text>
    <text x="390" y="285" text-anchor="middle" class="description">• Health Checks</text>
    <text x="390" y="295" text-anchor="middle" class="description">• Optional</text>
    
    <!-- Redis Container (Optional) -->
    <rect x="480" y="200" width="120" height="100" rx="5" class="cache"/>
    <text x="540" y="220" text-anchor="middle" class="component">Redis</text>
    <text x="540" y="235" text-anchor="middle" class="description">• Port: 6379</text>
    <text x="540" y="245" text-anchor="middle" class="description">• Volume: redis_data</text>
    <text x="540" y="255" text-anchor="middle" class="description">• Session Cache</text>
    <text x="540" y="265" text-anchor="middle" class="description">• Token Cache</text>
    <text x="540" y="275" text-anchor="middle" class="description">• Performance</text>
    <text x="540" y="285" text-anchor="middle" class="description">• Optional</text>
    
    <!-- Docker Volumes -->
    <rect x="320" y="320" width="140" height="60" rx="5" class="volume"/>
    <text x="390" y="340" text-anchor="middle" class="component">postgres_data</text>
    <text x="390" y="355" text-anchor="middle" class="description">• Persistent Volume</text>
    <text x="390" y="365" text-anchor="middle" class="description">• Database Files</text>
    <text x="390" y="375" text-anchor="middle" class="description">• Backup Ready</text>
    
    <rect x="480" y="320" width="120" height="60" rx="5" class="volume"/>
    <text x="540" y="340" text-anchor="middle" class="component">redis_data</text>
    <text x="540" y="355" text-anchor="middle" class="description">• Cache Storage</text>
    <text x="540" y="365" text-anchor="middle" class="description">• Optional Persistence</text>
    
    <!-- Docker Network -->
    <ellipse cx="350" cy="430" rx="250" ry="20" class="network"/>
    <text x="350" y="435" text-anchor="middle" class="label">oauth2-network (Bridge)</text>
    
    <!-- Connections -->
    <path d="M 200 320 L 200 340" class="connection"/>
    <path d="M 300 250 L 320 250" class="connection"/>
    <path d="M 300 260 L 480 260" class="connection"/>
    <path d="M 390 300 L 390 320" class="connection"/>
    <path d="M 540 300 L 540 320" class="connection"/>
  </g>
  
  <!-- Production Environment -->
  <g id="production-env">
    <rect x="750" y="100" width="600" height="400" rx="10" class="env-bg"/>
    <text x="1050" y="125" text-anchor="middle" class="env-title">Production Environment (Kubernetes)</text>
    
    <!-- Kubernetes Cluster -->
    <rect x="780" y="150" width="540" height="320" rx="5" fill="#f8f9fa" stroke="#6c757d" stroke-width="1"/>
    <text x="1050" y="175" text-anchor="middle" class="label" style="font-weight: bold;">Kubernetes Cluster (oauth2 namespace)</text>
    
    <!-- Load Balancer -->
    <rect x="800" y="200" width="120" height="60" rx="5" class="load-balancer"/>
    <text x="860" y="220" text-anchor="middle" class="component">Ingress</text>
    <text x="860" y="235" text-anchor="middle" class="description">• TLS Termination</text>
    <text x="860" y="245" text-anchor="middle" class="description">• Load Balancing</text>
    <text x="860" y="255" text-anchor="middle" class="description">• Path Routing</text>
    
    <!-- OAuth2 Service -->
    <rect x="940" y="200" width="120" height="60" rx="5" class="k8s-pod"/>
    <text x="1000" y="220" text-anchor="middle" class="component">OAuth2 Service</text>
    <text x="1000" y="235" text-anchor="middle" class="description">• ClusterIP</text>
    <text x="1000" y="245" text-anchor="middle" class="description">• Port: 9000</text>
    <text x="1000" y="255" text-anchor="middle" class="description">• Load Balancer</text>
    
    <!-- OAuth2 Pods -->
    <rect x="800" y="280" width="80" height="80" rx="5" class="k8s-pod"/>
    <text x="840" y="300" text-anchor="middle" class="component" style="font-size: 12px;">Pod 1</text>
    <text x="840" y="315" text-anchor="middle" class="description">• Replica 1</text>
    <text x="840" y="325" text-anchor="middle" class="description">• Health Checks</text>
    <text x="840" y="335" text-anchor="middle" class="description">• Resource Limits</text>
    <text x="840" y="345" text-anchor="middle" class="description">• Auto-restart</text>
    
    <rect x="900" y="280" width="80" height="80" rx="5" class="k8s-pod"/>
    <text x="940" y="300" text-anchor="middle" class="component" style="font-size: 12px;">Pod 2</text>
    <text x="940" y="315" text-anchor="middle" class="description">• Replica 2</text>
    <text x="940" y="325" text-anchor="middle" class="description">• Health Checks</text>
    <text x="940" y="335" text-anchor="middle" class="description">• Resource Limits</text>
    <text x="940" y="345" text-anchor="middle" class="description">• Auto-restart</text>
    
    <rect x="1000" y="280" width="80" height="80" rx="5" class="k8s-pod"/>
    <text x="1040" y="300" text-anchor="middle" class="component" style="font-size: 12px;">Pod 3</text>
    <text x="1040" y="315" text-anchor="middle" class="description">• Replica 3</text>
    <text x="1040" y="325" text-anchor="middle" class="description">• Health Checks</text>
    <text x="1040" y="335" text-anchor="middle" class="description">• Resource Limits</text>
    <text x="1040" y="345" text-anchor="middle" class="description">• Auto-restart</text>
    
    <!-- PostgreSQL StatefulSet -->
    <rect x="1100" y="280" width="100" height="80" rx="5" class="database"/>
    <text x="1150" y="300" text-anchor="middle" class="component" style="font-size: 12px;">PostgreSQL</text>
    <text x="1150" y="315" text-anchor="middle" class="description">• StatefulSet</text>
    <text x="1150" y="325" text-anchor="middle" class="description">• PVC Storage</text>
    <text x="1150" y="335" text-anchor="middle" class="description">• Backup Jobs</text>
    <text x="1150" y="345" text-anchor="middle" class="description">• HA Setup</text>
    
    <!-- ConfigMap and Secrets -->
    <rect x="1220" y="200" width="80" height="60" rx="5" class="volume"/>
    <text x="1260" y="220" text-anchor="middle" class="component" style="font-size: 12px;">ConfigMap</text>
    <text x="1260" y="235" text-anchor="middle" class="description">• App Config</text>
    <text x="1260" y="245" text-anchor="middle" class="description">• Environment</text>
    <text x="1260" y="255" text-anchor="middle" class="description">• Logging</text>
    
    <rect x="1220" y="280" width="80" height="60" rx="5" class="volume"/>
    <text x="1260" y="300" text-anchor="middle" class="component" style="font-size: 12px;">Secret</text>
    <text x="1260" y="315" text-anchor="middle" class="description">• JWT Secret</text>
    <text x="1260" y="325" text-anchor="middle" class="description">• DB Credentials</text>
    <text x="1260" y="335" text-anchor="middle" class="description">• TLS Certs</text>
    
    <!-- PVC -->
    <rect x="1100" y="380" width="100" height="40" rx="5" class="volume"/>
    <text x="1150" y="395" text-anchor="middle" class="component" style="font-size: 12px;">PVC</text>
    <text x="1150" y="405" text-anchor="middle" class="description">• Persistent Storage</text>
    <text x="1150" y="415" text-anchor="middle" class="description">• Database Files</text>
    
    <!-- Connections -->
    <path d="M 920 230 L 940 230" class="connection"/>
    <path d="M 1000 260 L 840 280" class="connection"/>
    <path d="M 1000 260 L 940 280" class="connection"/>
    <path d="M 1000 260 L 1040 280" class="connection"/>
    <path d="M 1080 320 L 1100 320" class="connection"/>
    <path d="M 1150 360 L 1150 380" class="connection"/>
    <path d="M 1080 300 L 1220 230" class="connection"/>
    <path d="M 1080 320 L 1220 300" class="connection"/>
  </g>
  
  <!-- Infrastructure Specifications -->
  <g id="specifications">
    <rect x="50" y="550" width="600" height="200" rx="5" fill="#f8f9fa" stroke="#6c757d" stroke-width="1"/>
    <text x="350" y="575" text-anchor="middle" class="env-title">Development Specifications</text>
    
    <text x="70" y="600" class="label" style="font-weight: bold;">Docker Compose Configuration:</text>
    <text x="70" y="620" class="label">• oauth2-auth-server:</text>
    <text x="90" y="635" class="label">  - Build: Dockerfile (Multi-stage)</text>
    <text x="90" y="650" class="label">  - Ports: 9000:9000</text>
    <text x="90" y="665" class="label">  - Environment: SPRING_PROFILES_ACTIVE=docker</text>
    <text x="90" y="680" class="label">  - Health Check: curl localhost:9000/auth/actuator/health</text>
    <text x="90" y="695" class="label">  - Restart: unless-stopped</text>
    <text x="90" y="710" class="label">  - JVM Options: -Xmx512m -Xms256m -XX:+UseG1GC</text>
    
    <text x="350" y="600" class="label" style="font-weight: bold;">Optional Services:</text>
    <text x="350" y="620" class="label">• PostgreSQL 13:</text>
    <text x="370" y="635" class="label">  - Ports: 5432:5432</text>
    <text x="370" y="650" class="label">  - Volume: postgres_data:/var/lib/postgresql/data</text>
    <text x="370" y="665" class="label">  - Environment: POSTGRES_DB=oauth2_auth</text>
    <text x="350" y="690" class="label">• Redis 6:</text>
    <text x="370" y="705" class="label">  - Ports: 6379:6379</text>
    <text x="370" y="720" class="label">  - Volume: redis_data:/data</text>
    
    <rect x="750" y="550" width="600" height="200" rx="5" fill="#f8f9fa" stroke="#6c757d" stroke-width="1"/>
    <text x="1050" y="575" text-anchor="middle" class="env-title">Production Specifications</text>
    
    <text x="770" y="600" class="label" style="font-weight: bold;">Kubernetes Resources:</text>
    <text x="770" y="620" class="label">• Deployment:</text>
    <text x="790" y="635" class="label">  - Replicas: 3</text>
    <text x="790" y="650" class="label">  - Strategy: RollingUpdate</text>
    <text x="790" y="665" class="label">  - Resources: CPU 500m, Memory 512Mi</text>
    <text x="790" y="680" class="label">  - Probes: Readiness, Liveness</text>
    <text x="770" y="700" class="label">• Service:</text>
    <text x="790" y="715" class="label">  - Type: ClusterIP</text>
    <text x="790" y="730" class="label">  - Port: 9000</text>
    
    <text x="1050" y="600" class="label" style="font-weight: bold;">Storage & Config:</text>
    <text x="1050" y="620" class="label">• PostgreSQL StatefulSet:</text>
    <text x="1070" y="635" class="label">  - PVC: 20Gi</text>
    <text x="1070" y="650" class="label">  - StorageClass: fast-ssd</text>
    <text x="1070" y="665" class="label">  - Backup: CronJob daily</text>
    <text x="1050" y="685" class="label">• ConfigMap: Application properties</text>
    <text x="1050" y="700" class="label">• Secret: JWT keys, DB credentials</text>
    <text x="1050" y="715" class="label">• Ingress: TLS, path-based routing</text>
  </g>
  
  <!-- Monitoring and Observability -->
  <g id="monitoring">
    <rect x="50" y="780" width="1300" height="100" rx="5" fill="#e8f5e8" stroke="#27ae60" stroke-width="1"/>
    <text x="700" y="805" text-anchor="middle" class="env-title" style="fill: #229954;">Monitoring and Observability</text>
    
    <text x="70" y="830" class="label" style="fill: #229954; font-weight: bold;">Health Checks:</text>
    <text x="70" y="845" class="label" style="fill: #229954;">• Spring Actuator: /auth/actuator/health, /auth/actuator/metrics</text>
    <text x="70" y="860" class="label" style="fill: #229954;">• Docker Health Check: 30s interval, 3 retries</text>
    <text x="70" y="875" class="label" style="fill: #229954;">• Kubernetes Probes: Readiness (startup), Liveness (runtime)</text>
    
    <text x="700" y="830" class="label" style="fill: #229954; font-weight: bold;">Logging:</text>
    <text x="700" y="845" class="label" style="fill: #229954;">• Structured JSON logging with Logback</text>
    <text x="700" y="860" class="label" style="fill: #229954;">• Configurable log levels per package</text>
    <text x="700" y="875" class="label" style="fill: #229954;">• Audit events: client registration, token generation</text>
    
    <text x="1000" y="830" class="label" style="fill: #229954; font-weight: bold;">Metrics:</text>
    <text x="1000" y="845" class="label" style="fill: #229954;">• JVM metrics: memory, GC, threads</text>
    <text x="1000" y="860" class="label" style="fill: #229954;">• Application metrics: request counts, response times</text>
    <text x="1000" y="875" class="label" style="fill: #229954;">• Custom metrics: token generation rates, client activity</text>
  </g>
  
  <!-- Deployment Commands -->
  <g id="commands">
    <rect x="50" y="900" width="650" height="80" rx="5" fill="#f0f8ff" stroke="#3498db" stroke-width="1"/>
    <text x="375" y="925" text-anchor="middle" class="env-title" style="fill: #2980b9;">Quick Start Commands</text>
    <text x="70" y="945" class="label" style="fill: #2980b9; font-weight: bold;">Development (Docker Compose):</text>
    <text x="70" y="960" class="label" style="fill: #2980b9; font-family: monospace;">docker-compose up -d</text>
    <text x="70" y="975" class="label" style="fill: #2980b9; font-family: monospace;">curl http://localhost:9000/auth/actuator/health</text>
    
    <rect x="720" y="900" width="630" height="80" rx="5" fill="#f0f8ff" stroke="#3498db" stroke-width="1"/>
    <text x="1035" y="925" text-anchor="middle" class="env-title" style="fill: #2980b9;">Production (Kubernetes)</text>
    <text x="740" y="945" class="label" style="fill: #2980b9; font-weight: bold;">Kubernetes Deployment:</text>
    <text x="740" y="960" class="label" style="fill: #2980b9; font-family: monospace;">kubectl apply -f k8s/</text>
    <text x="740" y="975" class="label" style="fill: #2980b9; font-family: monospace;">kubectl get pods -n oauth2</text>
  </g>
</svg>